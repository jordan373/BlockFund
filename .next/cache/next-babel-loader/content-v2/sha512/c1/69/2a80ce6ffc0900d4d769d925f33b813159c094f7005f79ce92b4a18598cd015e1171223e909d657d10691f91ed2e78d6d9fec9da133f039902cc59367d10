{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jordan/BlockFund/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport projectGenerator from '../ethereum/projectGenerator';\nimport Link from 'next/link';\n\nvar ProjIndex = /*#__PURE__*/function (_Component) {\n  _inherits(ProjIndex, _Component);\n\n  var _super = _createSuper(ProjIndex);\n\n  function ProjIndex() {\n    _classCallCheck(this, ProjIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProjIndex, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var pAdd;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return projectGenerator.methods.get_deployed_projects().call();\n\n              case 2:\n                pAdd = _context.sent;\n                console.log(pAdd);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Project Index should display again and again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }, this);\n    }\n  }]);\n\n  return ProjIndex;\n}(Component);\n\nexport default ProjIndex;","map":{"version":3,"sources":["/Users/jordan/BlockFund/pages/index.js"],"names":["React","Component","projectGenerator","Link","ProjIndex","methods","get_deployed_projects","call","pAdd","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,S;;;;;;;;;;;;;;;;;;;;;uBAEqBF,gBAAgB,CAACG,OAAjB,CAAyBC,qBAAzB,GAAiDC,IAAjD,E;;;AAAbC,gBAAAA,I;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;;;;;;;;;;;;;;;;;6BAIK;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;;;EATmBP,S;;AAYxB,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport projectGenerator from '../ethereum/projectGenerator';\nimport Link from 'next/link'\n\nclass ProjIndex extends Component {\n    async componentDidMount() {\n        const pAdd = await projectGenerator.methods.get_deployed_projects().call();\n        console.log(pAdd);\n    }\n\n\n    render() {\n        return <div>Project Index should display again and again</div>\n    }\n}\n\nexport default ProjIndex;"]},"metadata":{},"sourceType":"module"}