{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jordan/BlockFund/components/MinDonationTextField.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport instance from '../ethereum/projectGenerator.js';\nimport { Box } from '@material-ui/core';\nimport web3 from '../ethereum/web3.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Fab from '@material-ui/core/Fab';\nimport { useRouter } from 'next/router';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport PostAddTwoToneIcon from '@material-ui/icons/PostAddTwoTone';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '25ch'\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\nexport default function MinDonation() {\n  const router = useRouter();\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const timer = React.useRef();\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  const [values, setValues] = React.useState({\n    amount: ''\n  });\n\n  const handleChange = prop => event => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [prop]: event.target.value\n    }));\n  };\n\n  const onSubmit = async () => {\n    setOpen(true);\n    setSuccess(false);\n    setLoading(true);\n    console.log(values.amount); //const accounts;\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await instance.methods.createProject(values.amount).send({\n        from: accounts[0]\n      });\n      console.log(accounts[0]);\n      setSuccess(true);\n      setLoading(false);\n      setOpen(false);\n      router.push('/');\n    } catch (err) {\n      setSuccess(false);\n      setLoading(false);\n      setOpen(false);\n      console.log(\"Error: \" + err.message);\n    } // await instance.methods.createProject(values.amount) .send({\n    //   from: accounts[0]\n    // })\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(PostAddTwoToneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Create new Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"desc\",\n            label: \"Enter description\",\n            name: \"desc\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"amount\",\n            label: \"Amount in Eth\",\n            id: \"amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"recipient\",\n            label: \"Recipient Address\",\n            id: \"recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      m: 4,\n      children: /*#__PURE__*/_jsxDEV(Backdrop, {\n        className: classes.backdrop,\n        open: open,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n;","map":{"version":3,"sources":["/Users/jordan/BlockFund/components/MinDonationTextField.js"],"names":["React","clsx","makeStyles","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","Button","instance","Box","web3","CircularProgress","green","Fab","useRouter","Backdrop","Container","CssBaseline","Avatar","PostAddTwoToneIcon","Typography","Grid","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","buttonSuccess","backgroundColor","fabProgress","color","position","top","left","zIndex","buttonProgress","marginLeft","backdrop","drawer","MinDonation","router","classes","loading","setLoading","useState","success","setSuccess","open","setOpen","timer","useRef","buttonClassname","useEffect","clearTimeout","current","values","setValues","amount","handleChange","prop","event","target","value","onSubmit","console","log","accounts","eth","getAccounts","methods","createProject","send","from","push","err","message","paper","avatar","form","submit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button'\nimport instance from '../ethereum/projectGenerator.js'\nimport { Box } from '@material-ui/core';\nimport web3 from '../ethereum/web3.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Fab from '@material-ui/core/Fab';\nimport { useRouter } from 'next/router'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport PostAddTwoToneIcon from '@material-ui/icons/PostAddTwoTone';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '25ch',\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700],\n      },\n    },\n    fabProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: -6,\n      left: -6,\n      zIndex: 1,\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n}));\n\nexport default function MinDonation() {\n    const router = useRouter();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const timer = React.useRef();\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n\n    React.useEffect(() => {\n      return () => {\n        clearTimeout(timer.current);\n      };\n    }, []);\n  \n    const [values, setValues] = React.useState({\n      amount: '',\n    });\n\nconst handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n};\n\nconst onSubmit = async () => {\n    setOpen(true);\n    setSuccess(false);\n    setLoading(true);\n    console.log(values.amount);\n    //const accounts;\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await instance.methods.createProject(values.amount).send({\n      from: accounts[0]\n    });\n    console.log(accounts[0]);\n\n    setSuccess(true);\n    setLoading(false);\n    setOpen(false);\n\n\n    router.push('/');\n\n    } catch(err) {\n      setSuccess(false);\n      setLoading(false);\n      setOpen(false);\n      console.log(\"Error: \" + err.message);\n    }\n    \n    // await instance.methods.createProject(values.amount) .send({\n    //   from: accounts[0]\n    // })\n}\n\nreturn (\n    <div className={classes.root}>\n        {/* <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Minimum donation amount</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-amount\"\n            value={values.amount}\n            onChange={handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\">wei</InputAdornment>}\n            labelWidth={194}\n          />\n        </FormControl> */}\n        <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PostAddTwoToneIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create new Request\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"desc\"\n            label=\"Enter description\"\n            name=\"desc\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"amount\"\n            label=\"Amount in Eth\"\n            id=\"amount\"\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"recipient\"\n            label=\"Recipient Address\"\n            id=\"recipient\"\n          />\n          \n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Create\n          </Button>\n          <Grid container>\n            <Grid item xs>\n            </Grid>\n            <Grid item>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n      </Box>\n    </Container>\n        <Box textAlign='center' m={4}>\n          {/* <Button onClick={onSubmit} variant=\"contained\" align=\"center\" className={buttonClassname} color=\"primary\" disabled={loading}>\n            Create project\n          </Button> */}\n          <Backdrop className={classes.backdrop} open={open}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n        </Box>\n        \n    </div>\n)\n\n};\n"]},"metadata":{},"sourceType":"module"}