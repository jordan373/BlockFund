{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jordan/BlockFund/components/MinDonationTextField.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function ComposedTextField() {\n  const [name, setName] = React.useState('Composed TextField');\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"component-outlined\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        id: \"component-outlined\",\n        value: name,\n        onChange: handleChange,\n        label: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/jordan/BlockFund/components/MinDonationTextField.js"],"names":["React","makeStyles","FilledInput","FormControl","FormHelperText","Input","InputLabel","OutlinedInput","useStyles","theme","root","margin","spacing","ComposedTextField","name","setName","useState","classes","handleChange","event","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD;AADL;AADiC,CAAZ,CAAD,CAA5B;AAQA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACgB,QAAN,CAAe,oBAAf,CAAxB;AACA,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AAEA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACP,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,YAAY,EAAC,KAAvD;AAAA,2BAIE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAC,UAArB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,EAAE,EAAC,oBAAlB;AAAuC,QAAA,KAAK,EAAEI,IAA9C;AAAoD,QAAA,QAAQ,EAAEI,YAA9D;AAA4E,QAAA,KAAK,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function ComposedTextField() {\n  const [name, setName] = React.useState('Composed TextField');\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      \n      \n\n      <FormControl variant=\"outlined\">\n        <InputLabel htmlFor=\"component-outlined\">Name</InputLabel>\n        <OutlinedInput id=\"component-outlined\" value={name} onChange={handleChange} label=\"Name\" />\n      </FormControl>\n      \n    </form>\n  );\n}"]},"metadata":{},"sourceType":"module"}