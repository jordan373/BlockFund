{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nvar web3;\n\nvar getProvider = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return window.web3.currentProvider.enable();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getProvider() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nif (true && typeof window.web3 !== 'undefined') {\n  // means we are in browser, and metamask is running.\n  console.log(\"metamask op 1\");\n  web3 = new Web3(window.ethereum);\n  getProvider();\n} else {\n  // we are in the server, or user is not running metamask.\n  console.log(\"metamask op 2\");\n  var provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/11fb63f43c3b4774be075f9e477e0d8b');\n  web3 = new Web3(provider);\n}\n\nexport default web3;","map":{"version":3,"sources":["/Users/jordan/BlockFund/ethereum/web3.js"],"names":["Web3","web3","getProvider","window","currentProvider","enable","console","log","ethereum","provider","providers","HttpProvider"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ;;AAEA,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACVC,MAAM,CAACF,IAAP,CAAYG,eAAZ,CAA4BC,MAA5B,EADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXH,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAIA,IAAI,QAAiC,OAAOC,MAAM,CAACF,IAAd,KAAuB,WAA5D,EAAyE;AACpE;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAN,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASG,MAAM,CAACK,QAAhB,CAAP;AACAN,EAAAA,WAAW;AAEf,CAND,MAMO;AACH;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,MAAME,QAAQ,GAAG,IAAIT,IAAI,CAACU,SAAL,CAAeC,YAAnB,CACb,+DADa,CAAjB;AAGAV,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASS,QAAT,CAAP;AACH;;AAID,eAAeR,IAAf","sourcesContent":["import Web3 from 'web3';\n\nlet web3;\n\nconst getProvider = async () => {\n    await window.web3.currentProvider.enable(); // request authentication\n};\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n     // means we are in browser, and metamask is running.\n     console.log(\"metamask op 1\");\n     web3 = new Web3(window.ethereum);\n     getProvider();\n\n} else {\n    // we are in the server, or user is not running metamask.\n    console.log(\"metamask op 2\");\n    const provider = new Web3.providers.HttpProvider(\n        'https://rinkeby.infura.io/v3/11fb63f43c3b4774be075f9e477e0d8b'\n    );\n    web3 = new Web3(provider);\n}\n\n\n\nexport default web3;"]},"metadata":{},"sourceType":"module"}