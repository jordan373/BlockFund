{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Project from '../ethereum/project.js';\nimport { Component } from 'react';\n\nvar ProjectsDisplay = function ProjectsDisplay(_ref) {\n  var userAddress = _ref.userAddress,\n      minDonation = _ref.minDonation,\n      balance = _ref.balance,\n      reqCount = _ref.reqCount,\n      approvalCount = _ref.approvalCount,\n      contractManager = _ref.contractManager;\n  return {\n    userAddress: userAddress\n  }, {\n    minDonation: minDonation\n  }, {\n    balance: balance\n  }, {\n    reqCount: reqCount\n  }, {\n    approvalCount: approvalCount\n  }, {\n    contractManager: contractManager\n  };\n};\n\n_c = ProjectsDisplay;\n\nProjectsDisplay.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, address, project, display;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            address = query.address;\n            project = Project(address);\n            _context.next = 5;\n            return project.methods.projectDetails().call();\n\n          case 5:\n            display = _context.sent;\n            return _context.abrupt(\"return\", {\n              userAddress: address,\n              minDonation: display[0],\n              balance: display[1],\n              reqCount: display[2],\n              approvalCount: display[3],\n              contractManager: display[4]\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default ProjectsDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsDisplay\");","map":{"version":3,"sources":["/Users/jordan/BlockFund/components/UserContractInfo.js"],"names":["React","useEffect","useRouter","Project","Component","ProjectsDisplay","userAddress","minDonation","balance","reqCount","approvalCount","contractManager","getInitialProps","query","address","project","methods","projectDetails","call","display"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAmF;AAAA,MAAjFC,WAAiF,QAAjFA,WAAiF;AAAA,MAApEC,WAAoE,QAApEA,WAAoE;AAAA,MAAvDC,OAAuD,QAAvDA,OAAuD;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,MAApCC,aAAoC,QAApCA,aAAoC;AAAA,MAArBC,eAAqB,QAArBA,eAAqB;AAEvG,SACI;AAACL,IAAAA,WAAW,EAAXA;AAAD,KACA;AAACC,IAAAA,WAAW,EAAXA;AAAD,GADA,EAEA;AAACC,IAAAA,OAAO,EAAPA;AAAD,GAFA,EAGA;AAACC,IAAAA,QAAQ,EAARA;AAAD,GAHA,EAIA;AAACC,IAAAA,aAAa,EAAbA;AAAD,GAJA,EAKA;AAACC,IAAAA,eAAe,EAAfA;AAAD,GANJ;AAQH,CAVD;;KAAMN,e;;AAYNA,eAAe,CAACO,eAAhB;AAAA,uEAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT;AACtBC,YAAAA,OADsB,GACVD,KADU,CACtBC,OADsB;AAExBC,YAAAA,OAFwB,GAEdZ,OAAO,CAACW,OAAD,CAFO;AAAA;AAAA,mBAGRC,OAAO,CAACC,OAAR,CAAgBC,cAAhB,GAAiCC,IAAjC,EAHQ;;AAAA;AAGxBC,YAAAA,OAHwB;AAAA,6CAIvB;AACHb,cAAAA,WAAW,EAAEQ,OADV;AAEHP,cAAAA,WAAW,EAAEY,OAAO,CAAC,CAAD,CAFjB;AAGHX,cAAAA,OAAO,EAAEW,OAAO,CAAC,CAAD,CAHb;AAIHV,cAAAA,QAAQ,EAAEU,OAAO,CAAC,CAAD,CAJd;AAKHT,cAAAA,aAAa,EAAES,OAAO,CAAC,CAAD,CALnB;AAMHR,cAAAA,eAAe,EAAEQ,OAAO,CAAC,CAAD;AANrB,aAJuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAed,eAAf","sourcesContent":["\nimport React, { useEffect } from 'react';\nimport {useRouter} from 'next/router';\nimport Project from '../ethereum/project.js';\nimport { Component } from 'react';\n\nconst ProjectsDisplay = ({userAddress, minDonation, balance, reqCount, approvalCount, contractManager}) => {\n\n    return (\n        {userAddress},\n        {minDonation},\n        {balance},\n        {reqCount},\n        {approvalCount},\n        {contractManager}\n    )\n}\n\nProjectsDisplay.getInitialProps = async ({ query }) => {\n    const { address } = query\n    const project = Project(address);\n    const display = await project.methods.projectDetails().call();\n    return {\n        userAddress: address,\n        minDonation: display[0],\n        balance: display[1],\n        reqCount: display[2],\n        approvalCount: display[3],\n        contractManager: display[4]\n    }\n}\n\nexport default ProjectsDisplay;"]},"metadata":{},"sourceType":"module"}