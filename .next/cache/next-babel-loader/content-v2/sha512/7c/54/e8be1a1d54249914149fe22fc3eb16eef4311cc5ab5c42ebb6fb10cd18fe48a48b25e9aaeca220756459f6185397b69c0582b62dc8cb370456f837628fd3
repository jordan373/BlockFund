{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jordan/BlockFund/pages/projects/[address].js\",\n    _this = this;\n\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Project from '../../ethereum/project.js';\nimport { Component } from 'react'; //import getAddress from '../about.js'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport InfoCard from '../../components/card.js';\n\nvar ProjectsDisplay = function ProjectsDisplay(_ref) {\n  var userAddress = _ref.userAddress,\n      minDonation = _ref.minDonation,\n      balance = _ref.balance,\n      reqCount = _ref.reqCount,\n      approvalCount = _ref.approvalCount,\n      contractManager = _ref.contractManager;\n  return /*#__PURE__*/_jsxDEV(InfoCard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, _this);\n};\n\n_c = ProjectsDisplay;\n\nProjectsDisplay.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, address, project, display;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            address = query.address;\n            project = Project(address);\n            _context.next = 5;\n            return project.methods.projectDetails().call();\n\n          case 5:\n            display = _context.sent;\n            return _context.abrupt(\"return\", {\n              userAddress: address,\n              minDonation: display[0],\n              balance: display[1],\n              reqCount: display[2],\n              approvalCount: display[3],\n              contractManager: display[4]\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default ProjectsDisplay; // function Post({ post }) {\n// }\n// export async function getStaticPaths() {\n//     const res = await fetch('http://localhost:3000/projects')\n//     const posts = await res.json()\n//     const paths = posts.map((post) => ({\n//         params: {address: post.address}\n//     }))\n//     return {paths, fallback: false}\n// }\n// export async function getStaticProps({params}) {\n//     const res = await fetch(`https://localhost:3000/projects/${params.address}`)\n//     const post = await res.json()\n//     return {props: {post}}\n// }\n// export default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsDisplay\");","map":{"version":3,"sources":["/Users/jordan/BlockFund/pages/projects/[address].js"],"names":["React","useEffect","useRouter","Project","Component","makeStyles","CardActions","CardContent","Button","Typography","Grid","InfoCard","ProjectsDisplay","userAddress","minDonation","balance","reqCount","approvalCount","contractManager","getInitialProps","query","address","project","methods","projectDetails","call","display"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAmF;AAAA,MAAjFC,WAAiF,QAAjFA,WAAiF;AAAA,MAApEC,WAAoE,QAApEA,WAAoE;AAAA,MAAvDC,OAAuD,QAAvDA,OAAuD;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,MAApCC,aAAoC,QAApCA,aAAoC;AAAA,MAArBC,eAAqB,QAArBA,eAAqB;AAIzG,sBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,WADJ;AAGD,CAPD;;KAAMN,e;;AAaNA,eAAe,CAACO,eAAhB;AAAA,uEAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT;AACtBC,YAAAA,OADsB,GACVD,KADU,CACtBC,OADsB;AAExBC,YAAAA,OAFwB,GAEdnB,OAAO,CAACkB,OAAD,CAFO;AAAA;AAAA,mBAGRC,OAAO,CAACC,OAAR,CAAgBC,cAAhB,GAAiCC,IAAjC,EAHQ;;AAAA;AAGxBC,YAAAA,OAHwB;AAAA,6CAIvB;AACHb,cAAAA,WAAW,EAAEQ,OADV;AAEHP,cAAAA,WAAW,EAAEY,OAAO,CAAC,CAAD,CAFjB;AAGHX,cAAAA,OAAO,EAAEW,OAAO,CAAC,CAAD,CAHb;AAIHV,cAAAA,QAAQ,EAAEU,OAAO,CAAC,CAAD,CAJd;AAKHT,cAAAA,aAAa,EAAES,OAAO,CAAC,CAAD,CALnB;AAMHR,cAAAA,eAAe,EAAEQ,OAAO,CAAC,CAAD;AANrB,aAJuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAed,eAAf,C,CAUA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["import React, { useEffect } from 'react';\nimport {useRouter} from 'next/router';\nimport Project from '../../ethereum/project.js';\nimport { Component } from 'react';\n//import getAddress from '../about.js'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport InfoCard from '../../components/card.js'\n\nconst ProjectsDisplay = ({userAddress, minDonation, balance, reqCount, approvalCount, contractManager}) => {\n\n    \n\n  return (\n      <InfoCard/>\n  );\n}\n\n\n\n\n\nProjectsDisplay.getInitialProps = async ({ query }) => {\n    const { address } = query\n    const project = Project(address);\n    const display = await project.methods.projectDetails().call();\n    return {\n        userAddress: address,\n        minDonation: display[0],\n        balance: display[1],\n        reqCount: display[2],\n        approvalCount: display[3],\n        contractManager: display[4]\n    }\n}\n    \nexport default ProjectsDisplay\n\n\n\n\n\n\n\n\n\n// function Post({ post }) {\n\n// }\n\n// export async function getStaticPaths() {\n//     const res = await fetch('http://localhost:3000/projects')\n//     const posts = await res.json()\n\n//     const paths = posts.map((post) => ({\n//         params: {address: post.address}\n//     }))\n    \n//     return {paths, fallback: false}\n// }\n\n// export async function getStaticProps({params}) {\n//     const res = await fetch(`https://localhost:3000/projects/${params.address}`)\n//     const post = await res.json()\n\n//     return {props: {post}}\n// }\n\n// export default Post;"]},"metadata":{},"sourceType":"module"}