{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport { Box } from '@material-ui/core';\nimport web3 from '../ethereum/web3.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport { useRouter } from 'next/router';\nimport Project from '../ethereum/project.js';\nimport Backdrop from '@material-ui/core/Backdrop';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '25ch'\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\nexport default function MakeDonation({\n  address\n}) {\n  const router = useRouter();\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const timer = React.useRef();\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  const [values, setValues] = React.useState({\n    amount: ''\n  });\n\n  const handleChange = prop => event => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [prop]: event.target.value\n    }));\n  };\n\n  const onSubmit = async () => {\n    setSuccess(false);\n    setLoading(true);\n    console.log(values.amount);\n    const project = Project(address); //const accounts;\n\n    try {\n      setOpen(true);\n      const accounts = await web3.eth.getAccounts();\n      await project.methods.donate().send({\n        from: accounts[0],\n        value: values.amount\n      });\n      setSuccess(true);\n      setLoading(false);\n      setOpen(false);\n      router.push(`/projects/${address}/dashboard`);\n    } catch (err) {\n      setSuccess(false);\n      setLoading(false);\n      setOpen(false);\n      console.log(\"Error: \" + err.message);\n    } // await instance.methods.createProject(values.amount) .send({\n    //   from: accounts[0]\n    // })\n\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxs(Box, {\n      textAlign: \"center\",\n      m: 4,\n      children: [/*#__PURE__*/_jsxs(FormControl, {\n        fullWidth: true,\n        className: classes.margin,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsx(InputLabel, {\n          htmlFor: \"outlined-adornment-amount\",\n          children: \"amount\"\n        }), /*#__PURE__*/_jsx(OutlinedInput, {\n          id: \"outlined-adornment-amount\",\n          value: values.amount,\n          onChange: handleChange('amount'),\n          startAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n            position: \"start\",\n            children: \"WEI\"\n          }),\n          labelWidth: 55\n        })]\n      }), /*#__PURE__*/_jsx(Button, {\n        onClick: onSubmit,\n        variant: \"contained\",\n        align: \"center\",\n        className: buttonClassname,\n        color: \"primary\",\n        disabled: loading,\n        children: \"Fund This Project\"\n      }), /*#__PURE__*/_jsx(Backdrop, {\n        className: classes.backdrop,\n        open: open,\n        children: /*#__PURE__*/_jsx(CircularProgress, {\n          color: \"inherit\"\n        })\n      })]\n    })\n  });\n}\n;","map":null,"metadata":{},"sourceType":"module"}