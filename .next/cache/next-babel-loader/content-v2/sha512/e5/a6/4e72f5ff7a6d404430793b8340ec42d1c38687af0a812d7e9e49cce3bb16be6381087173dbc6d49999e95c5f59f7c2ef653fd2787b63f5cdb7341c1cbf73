{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Project from '../../../ethereum/project.js';\nimport { Component } from 'react'; //import getAddress from '../about.js'\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'; //import { mainListItems, secondaryListItems } from './listItems';\n\nimport Chart from '../../../components/Chart.js';\nimport ProjectBalance from '../../../components/ProjectBalance.js';\nimport Requests from '../../../components/Requests.js';\nimport MakeDonation from '../../../components/makeDonation.js';\nimport { mainListItems, secondaryListItems } from '../../../components/listItem.js';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px'\n  }, theme.mixins.toolbar),\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  },\n  textField: {\n    width: 10\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst ProjectsDisplay = ({\n  userAddress,\n  minDonation,\n  balance,\n  reqCount,\n  approvalCount,\n  contractManager,\n  userRequests\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(AppBar, {\n      position: \"absolute\",\n      className: clsx(classes.appBar, open && classes.appBarShift),\n      children: /*#__PURE__*/_jsxs(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsx(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          className: clsx(classes.menuButton, open && classes.menuButtonHidden),\n          children: /*#__PURE__*/_jsx(MenuIcon, {})\n        }), /*#__PURE__*/_jsx(Typography, {\n          component: \"h1\",\n          variant: \"h6\",\n          color: \"inherit\",\n          noWrap: true,\n          className: classes.title,\n          children: \"Project Dashboard\"\n        }), /*#__PURE__*/_jsx(IconButton, {\n          color: \"inherit\"\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n      },\n      open: open,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classes.toolbarIcon,\n        children: /*#__PURE__*/_jsx(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsx(ChevronLeftIcon, {})\n        })\n      }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(List, {\n        children: mainListItems\n      }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(List, {\n        children: secondaryListItems\n      })]\n    }), /*#__PURE__*/_jsxs(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classes.appBarSpacer\n      }), /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        spacing: 0,\n        direction: \"column\",\n        alignItems: \"center\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsx(MakeDonation, {\n          address: userAddress,\n          align: \"center\"\n        })\n      }), /*#__PURE__*/_jsxs(Container, {\n        maxWidth: \"lg\",\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            lg: 9,\n            children: /*#__PURE__*/_jsx(Paper, {\n              className: fixedHeightPaper,\n              children: /*#__PURE__*/_jsx(Chart, {\n                apprCount: approvalCount\n              })\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            lg: 3,\n            children: /*#__PURE__*/_jsx(Paper, {\n              className: fixedHeightPaper,\n              children: /*#__PURE__*/_jsx(ProjectBalance, {\n                managerAddress: contractManager,\n                pBalance: balance,\n                minimumDonation: minDonation\n              })\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(Paper, {\n              className: classes.paper,\n              children: /*#__PURE__*/_jsx(Requests, {\n                usrAddress: userAddress,\n                usrRequests: userRequests,\n                usrReqCount: reqCount,\n                usrApprovalCount: approvalCount\n              })\n            })\n          })]\n        }), /*#__PURE__*/_jsx(Box, {\n          pt: 4\n        })]\n      })]\n    })]\n  });\n};\n\nProjectsDisplay.getInitialProps = async ({\n  query\n}) => {\n  const {\n    address\n  } = query;\n  const project = Project(address);\n  const display = await project.methods.projectDetails().call();\n  const apprCount = await project.methods.appr_counter().call();\n  const requestCount = await project.methods.getRequestsCount().call();\n  const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n    return project.methods.requests(index).call();\n  }));\n  console.log(requests);\n  return {\n    userAddress: address,\n    minDonation: display[0],\n    balance: display[1],\n    reqCount: display[2],\n    approvalCount: display[3],\n    contractManager: display[4],\n    userRequests: requests,\n    reqCount: requestCount,\n    approvalCount: apprCount\n  };\n};\n\nexport default ProjectsDisplay;","map":null,"metadata":{},"sourceType":"module"}