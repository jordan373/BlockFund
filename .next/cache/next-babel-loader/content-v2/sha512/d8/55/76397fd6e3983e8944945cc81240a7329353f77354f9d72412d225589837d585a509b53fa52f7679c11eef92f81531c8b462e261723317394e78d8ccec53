{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport PostAddTwoToneIcon from '@material-ui/icons/PostAddTwoTone';\nimport Project from '../../../ethereum/project.js';\nimport web3 from '../../../ethereum/web3.js';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useRouter } from 'next/router';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\nexport default function RequestForm({\n  userAddress\n}) {\n  const classes = useStyles();\n  const router = useRouter();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  const [request, setRequest] = React.useState({\n    description: '',\n    amount: '',\n    recipient: ''\n  });\n\n  const handleChange = prop => event => {\n    setRequest(_objectSpread(_objectSpread({}, request), {}, {\n      [prop]: event.target.value\n    }));\n  };\n\n  const onSubmit = async () => {\n    setSuccess(false);\n    setLoading(true);\n    console.log(userAddress);\n    const project = Project(userAddress);\n\n    try {\n      setOpen(true);\n      const accounts = await web3.eth.getAccounts();\n      await project.methods.createReq(request.recipient, request.description, request.amount).send({\n        from: accounts[0]\n      });\n      setSuccess(true);\n      setLoading(false);\n      setOpen(false);\n      router.push(`/projects/${userAddress}/dashboard`);\n    } catch (err) {\n      setSuccess(false);\n      setLoading(false);\n      setOpen(false);\n      console.log(\"Error: \" + err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsxs(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsx(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsx(PostAddTwoToneIcon, {})\n      }), /*#__PURE__*/_jsx(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Create New Request\"\n      }), /*#__PURE__*/_jsxs(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsx(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"desc\",\n          label: \"Enter description\",\n          name: \"desc\",\n          value: request.description,\n          onChange: handleChange('description'),\n          autoFocus: true\n        }), /*#__PURE__*/_jsx(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"amount\",\n          label: \"Amount in WEI\",\n          id: \"amount\",\n          value: request.amount,\n          onChange: handleChange('amount')\n        }), /*#__PURE__*/_jsx(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"recipient\",\n          label: \"Recipient Address\",\n          id: \"recipient\",\n          value: request.recipient,\n          onChange: handleChange('recipient')\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: onSubmit,\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          disabled: loading,\n          children: \"Create\"\n        }), /*#__PURE__*/_jsx(Backdrop, {\n          className: classes.backdrop,\n          open: open,\n          children: /*#__PURE__*/_jsx(CircularProgress, {\n            color: \"inherit\"\n          })\n        }), /*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: true\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(Box, {\n      mt: 8\n    })]\n  });\n}\n\nRequestForm.getInitialProps = async ({\n  query\n}) => {\n  const {\n    address\n  } = query;\n  console.log(\"hmm: \" + address);\n  return {\n    userAddress: address\n  };\n};","map":null,"metadata":{},"sourceType":"module"}