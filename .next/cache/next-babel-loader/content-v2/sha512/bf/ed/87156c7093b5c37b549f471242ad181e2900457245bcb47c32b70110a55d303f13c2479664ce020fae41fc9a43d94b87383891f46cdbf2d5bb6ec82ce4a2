{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jordan/BlockFund/components/makeDonation.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport instance from '../ethereum/projectGenerator.js';\nimport { Box } from '@material-ui/core';\nimport web3 from '../ethereum/web3.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Fab from '@material-ui/core/Fab';\nimport { useRouter } from 'next/router';\nimport Project from '../ethereum/project.js';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3)\n    },\n    textField: {\n      width: '25ch'\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: -6,\n      left: -6,\n      zIndex: 1\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    }\n  };\n});\nexport default function MakeDonation(_ref) {\n  _s();\n\n  var address = _ref.address;\n  var router = useRouter();\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      success = _React$useState4[0],\n      setSuccess = _React$useState4[1];\n\n  var timer = React.useRef();\n  var buttonClassname = clsx(_defineProperty({}, classes.buttonSuccess, success));\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  var _React$useState5 = React.useState({\n    amount: ''\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      values = _React$useState6[0],\n      setValues = _React$useState6[1];\n\n  var handleChange = function handleChange(prop) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSuccess(false);\n              setLoading(true);\n              console.log(values.amount); //const accounts;\n\n              try {\n                //const accounts = await web3.eth.getAccounts();\n                //const project = Project(address);\n                console.log(address);\n                setSuccess(true);\n                setLoading(false); //router.push('/');\n              } catch (err) {\n                setSuccess(false);\n                setLoading(false);\n                console.log(\"Error: \" + err.message);\n              } // await instance.methods.createProject(values.amount) .send({\n              //   from: accounts[0]\n              // })\n\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      m: 4,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onSubmit,\n        variant: \"contained\",\n        align: \"center\",\n        className: buttonClassname,\n        color: \"primary\",\n        disabled: loading,\n        children: \"Make Donation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        className: classes.margin,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-amount\",\n          children: \"Donation amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"outlined-adornment-amount\",\n          value: values.amount,\n          onChange: handleChange('amount'),\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"wei\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this),\n          labelWidth: 125\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MakeDonation, \"UnhmEMAkGqhRVZLCZDiu8umvgfk=\", false, function () {\n  return [useRouter, useStyles];\n});\n\n_c = MakeDonation;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeDonation\");","map":{"version":3,"sources":["/Users/jordan/BlockFund/components/makeDonation.js"],"names":["React","clsx","makeStyles","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","Button","instance","Box","web3","CircularProgress","green","Fab","useRouter","Project","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","buttonSuccess","backgroundColor","fabProgress","color","position","top","left","zIndex","buttonProgress","marginLeft","MakeDonation","address","router","classes","useState","loading","setLoading","success","setSuccess","timer","useRef","buttonClassname","useEffect","clearTimeout","current","amount","values","setValues","handleChange","prop","event","target","value","onSubmit","console","log","err","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button'\nimport instance from '../ethereum/projectGenerator.js'\nimport { Box } from '@material-ui/core';\nimport web3 from '../ethereum/web3.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Fab from '@material-ui/core/Fab';\nimport { useRouter } from 'next/router'\nimport Project from '../ethereum/project.js'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '25ch',\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700],\n      },\n    },\n    fabProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: -6,\n      left: -6,\n      zIndex: 1,\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n}));\n\nexport default function MakeDonation({ address }) {\n    const router = useRouter();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const timer = React.useRef();\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n\n    React.useEffect(() => {\n      return () => {\n        clearTimeout(timer.current);\n      };\n    }, []);\n  \n    const [values, setValues] = React.useState({\n      amount: '',\n    });\n\nconst handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n};\n\nconst onSubmit = async () => {\n    setSuccess(false);\n    setLoading(true);\n    console.log(values.amount);\n    //const accounts;\n    try {\n      //const accounts = await web3.eth.getAccounts();\n      //const project = Project(address);\n      console.log(address);\n\n    setSuccess(true);\n    setLoading(false);\n\n\n    //router.push('/');\n\n    } catch(err) {\n      setSuccess(false);\n      setLoading(false);\n      console.log(\"Error: \" + err.message);\n    }\n    \n    // await instance.methods.createProject(values.amount) .send({\n    //   from: accounts[0]\n    // })\n}\n\nreturn (\n    <div className={classes.root}>\n        <Box textAlign='center' m={4}>\n          \n          <Button onClick={onSubmit} variant=\"contained\" align=\"center\" className={buttonClassname} color=\"primary\" disabled={loading}>\n            Make Donation\n          </Button>\n          \n          \n          <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Donation amount</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-amount\"\n            value={values.amount}\n            onChange={handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\">wei</InputAdornment>}\n            labelWidth={125}\n          />\n        </FormControl>\n          </Box>\n        \n    </div>\n)\n\n};"]},"metadata":{},"sourceType":"module"}