{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jordan/BlockFund/pages/projects/[address].js\",\n    _this = this;\n\nimport { query } from 'express';\nimport React from 'react';\nimport { Component } from 'react';\nimport { getServerSideProps } from 'next';\nimport useSWR from 'swr'; // export const getStaticPaths = async () => {\n//     const res = await fetch('http://localhost:3000/projects');\n//     const data = await res.json();\n//     const paths = data.map( project => {\n//         return {\n//             params: { address: project.address.toString() }\n//         }\n//     })\n//     return {\n//         paths,\n//         fallback: false\n//     }\n// }\n// export const getStaticProps = async (context) => {\n//     const address = context.params.address;\n//     const res = await fetch('http://localhost:3000/projects/'+address);\n//     const data = await res.json();\n//     return {\n//         props: {project: data}\n//     }\n// }\n\nvar ProjectsDisplay = function ProjectsDisplay(_ref) {\n  var project = _ref.project;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"hi\", {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = ProjectsDisplay;\nexport default ProjectsDisplay; // function Post({ post }) {\n// }\n// export async function getStaticPaths() {\n//     const res = await fetch('http://localhost:3000/projects')\n//     const posts = await res.json()\n//     const paths = posts.map((post) => ({\n//         params: {address: post.address}\n//     }))\n//     return {paths, fallback: false}\n// }\n// export async function getStaticProps({params}) {\n//     const res = await fetch(`https://localhost:3000/projects/${params.address}`)\n//     const post = await res.json()\n//     return {props: {post}}\n// }\n// export default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsDisplay\");","map":{"version":3,"sources":["/Users/jordan/BlockFund/pages/projects/[address].js"],"names":["query","React","Component","getServerSideProps","useSWR","ProjectsDisplay","project"],"mappings":";;;;;AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,kBAAT,QAAmC,MAAnC;AACA,OAAOC,MAAP,MAAmB,KAAnB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAe;AAAA,MAAbC,OAAa,QAAbA,OAAa;AACnC,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAND;;KAAMD,e;AAQN,eAAeA,eAAf,C,CAUA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["import { query } from 'express';\nimport React from 'react'\nimport { Component } from 'react';\nimport { getServerSideProps } from 'next';\nimport useSWR from 'swr'\n\n// export const getStaticPaths = async () => {\n//     const res = await fetch('http://localhost:3000/projects');\n//     const data = await res.json();\n\n//     const paths = data.map( project => {\n//         return {\n//             params: { address: project.address.toString() }\n//         }\n//     })\n\n//     return {\n//         paths,\n//         fallback: false\n//     }\n// }\n\n// export const getStaticProps = async (context) => {\n//     const address = context.params.address;\n//     const res = await fetch('http://localhost:3000/projects/'+address);\n//     const data = await res.json();\n\n//     return {\n//         props: {project: data}\n//     }\n// }\n\nconst ProjectsDisplay = ({project}) => {\n    return (\n        <div>\n            <hi>hi</hi>\n        </div>\n    );\n}\n\nexport default ProjectsDisplay\n\n\n\n\n\n\n\n\n\n// function Post({ post }) {\n\n// }\n\n// export async function getStaticPaths() {\n//     const res = await fetch('http://localhost:3000/projects')\n//     const posts = await res.json()\n\n//     const paths = posts.map((post) => ({\n//         params: {address: post.address}\n//     }))\n    \n//     return {paths, fallback: false}\n// }\n\n// export async function getStaticProps({params}) {\n//     const res = await fetch(`https://localhost:3000/projects/${params.address}`)\n//     const post = await res.json()\n\n//     return {props: {post}}\n// }\n\n// export default Post;"]},"metadata":{},"sourceType":"module"}