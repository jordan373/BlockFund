{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jordan/BlockFund/components/MinDonationTextField.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport instance from '../ethereum/projectGenerator.js';\nimport { Box } from '@material-ui/core';\nimport web3 from '../ethereum/web3.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Fab from '@material-ui/core/Fab';\nimport { useRouter } from 'next/router';\nimport Backdrop from '@material-ui/core/Backdrop';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '25ch'\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\nexport default function MinDonation() {\n  const router = useRouter();\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const timer = React.useRef();\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  const [values, setValues] = React.useState({\n    amount: ''\n  });\n\n  const handleChange = prop => event => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [prop]: event.target.value\n    }));\n  };\n\n  const onSubmit = async () => {\n    setOpen(true);\n    setSuccess(false);\n    setLoading(true);\n    console.log(values.amount); //const accounts;\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await instance.methods.createProject(values.amount).send({\n        from: accounts[0]\n      });\n      console.log(accounts[0]);\n      setSuccess(true);\n      setLoading(false);\n      setOpen(false);\n      router.push('/');\n    } catch (err) {\n      setSuccess(false);\n      setLoading(false);\n      setOpen(false);\n      console.log(\"Error: \" + err.message);\n    } // await instance.methods.createProject(values.amount) .send({\n    //   from: accounts[0]\n    // })\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      className: classes.margin,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"outlined-adornment-amount\",\n        children: \"Minimum donation amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        id: \"outlined-adornment-amount\",\n        value: values.amount,\n        onChange: handleChange('amount'),\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: \"wei\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this),\n        labelWidth: 194\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      m: 4,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onSubmit,\n        variant: \"contained\",\n        align: \"center\",\n        className: buttonClassname,\n        color: \"primary\",\n        disabled: loading,\n        children: \"Create project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n        className: classes.backdrop,\n        open: open,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n;","map":{"version":3,"sources":["/Users/jordan/BlockFund/components/MinDonationTextField.js"],"names":["React","clsx","makeStyles","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","Button","instance","Box","web3","CircularProgress","green","Fab","useRouter","Backdrop","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","buttonSuccess","backgroundColor","fabProgress","color","position","top","left","zIndex","buttonProgress","marginLeft","MinDonation","router","classes","loading","setLoading","useState","success","setSuccess","open","setOpen","timer","useRef","buttonClassname","useEffect","clearTimeout","current","values","setValues","amount","handleChange","prop","event","target","value","onSubmit","console","log","accounts","eth","getAccounts","methods","createProject","send","from","push","err","message","backdrop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button'\nimport instance from '../ethereum/projectGenerator.js'\nimport { Box } from '@material-ui/core';\nimport web3 from '../ethereum/web3.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Fab from '@material-ui/core/Fab';\nimport { useRouter } from 'next/router'\nimport Backdrop from '@material-ui/core/Backdrop';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '25ch',\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700],\n      },\n    },\n    fabProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: -6,\n      left: -6,\n      zIndex: 1,\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n}));\n\nexport default function MinDonation() {\n    const router = useRouter();\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const timer = React.useRef();\n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n\n    React.useEffect(() => {\n      return () => {\n        clearTimeout(timer.current);\n      };\n    }, []);\n  \n    const [values, setValues] = React.useState({\n      amount: '',\n    });\n\nconst handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n};\n\nconst onSubmit = async () => {\n    setOpen(true);\n    setSuccess(false);\n    setLoading(true);\n    console.log(values.amount);\n    //const accounts;\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await instance.methods.createProject(values.amount).send({\n      from: accounts[0]\n    });\n    console.log(accounts[0]);\n\n    setSuccess(true);\n    setLoading(false);\n    setOpen(false);\n\n\n    router.push('/');\n\n    } catch(err) {\n      setSuccess(false);\n      setLoading(false);\n      setOpen(false);\n      console.log(\"Error: \" + err.message);\n    }\n    \n    // await instance.methods.createProject(values.amount) .send({\n    //   from: accounts[0]\n    // })\n}\n\nreturn (\n    <div className={classes.root}>\n        <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Minimum donation amount</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-amount\"\n            value={values.amount}\n            onChange={handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\">wei</InputAdornment>}\n            labelWidth={194}\n          />\n        </FormControl>\n        <Box textAlign='center' m={4}>\n          <Button onClick={onSubmit} variant=\"contained\" align=\"center\" className={buttonClassname} color=\"primary\" disabled={loading}>\n            Create project\n          </Button>\n          <Backdrop className={classes.backdrop} open={open}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n        </Box>\n        \n    </div>\n)\n\n};\n"]},"metadata":{},"sourceType":"module"}