{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jordan/BlockFund/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jordan/BlockFund/pages/projects/[address].js\",\n    _this = this;\n\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport Project from '../../ethereum/project.js';\nimport { Component } from 'react';\n\nvar ProjectsDisplay = function ProjectsDisplay(displayData) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: displayData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = ProjectsDisplay;\n\nProjectsDisplay.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var router, address, project, display;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            router = withRouter();\n            address = router.query.address;\n            project = Project(address);\n            display = project.methods.projectDetails().call();\n            return _context.abrupt(\"return\", {\n              displayData: display\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default ProjectsDisplay; // function Post({ post }) {\n// }\n// export async function getStaticPaths() {\n//     const res = await fetch('http://localhost:3000/projects')\n//     const posts = await res.json()\n//     const paths = posts.map((post) => ({\n//         params: {address: post.address}\n//     }))\n//     return {paths, fallback: false}\n// }\n// export async function getStaticProps({params}) {\n//     const res = await fetch(`https://localhost:3000/projects/${params.address}`)\n//     const post = await res.json()\n//     return {props: {post}}\n// }\n// export default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsDisplay\");","map":{"version":3,"sources":["/Users/jordan/BlockFund/pages/projects/[address].js"],"names":["React","useEffect","withRouter","Project","Component","ProjectsDisplay","displayData","getInitialProps","context","router","address","query","project","display","methods","projectDetails","call"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAiB;AAIrC,sBACI;AAAA,2BACI;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CATD;;KAAMD,e;;AAWNA,eAAe,CAACE,eAAhB;AAAA,sEAAkC,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBC,YAAAA,MAFwB,GAEfP,UAAU,EAFK;AAGtBQ,YAAAA,OAHsB,GAGVD,MAAM,CAACE,KAHG,CAGtBD,OAHsB;AAKxBE,YAAAA,OALwB,GAKdT,OAAO,CAACO,OAAD,CALO;AAOxBG,YAAAA,OAPwB,GAOdD,OAAO,CAACE,OAAR,CAAgBC,cAAhB,GAAiCC,IAAjC,EAPc;AAAA,6CAUvB;AAACV,cAAAA,WAAW,EAAEO;AAAd,aAVuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AAaA,eAAeR,eAAf,C,CAUA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["import React, { useEffect } from 'react';\nimport {withRouter} from 'next/router';\nimport Project from '../../ethereum/project.js';\nimport { Component } from 'react';\n\n\nconst ProjectsDisplay = (displayData) => {\n\n    \n\n    return (\n        <div>\n            <h1>{displayData}</h1>\n        </div>\n    );\n}\n\nProjectsDisplay.getInitialProps = async(context) => {\n\n    const router = withRouter();\n    const { address } = router.query;\n\n    const project = Project(address);\n\n    const display = project.methods.projectDetails().call();\n\n\n    return {displayData: display}\n}\n\nexport default ProjectsDisplay\n\n\n\n\n\n\n\n\n\n// function Post({ post }) {\n\n// }\n\n// export async function getStaticPaths() {\n//     const res = await fetch('http://localhost:3000/projects')\n//     const posts = await res.json()\n\n//     const paths = posts.map((post) => ({\n//         params: {address: post.address}\n//     }))\n    \n//     return {paths, fallback: false}\n// }\n\n// export async function getStaticProps({params}) {\n//     const res = await fetch(`https://localhost:3000/projects/${params.address}`)\n//     const post = await res.json()\n\n//     return {props: {post}}\n// }\n\n// export default Post;"]},"metadata":{},"sourceType":"module"}