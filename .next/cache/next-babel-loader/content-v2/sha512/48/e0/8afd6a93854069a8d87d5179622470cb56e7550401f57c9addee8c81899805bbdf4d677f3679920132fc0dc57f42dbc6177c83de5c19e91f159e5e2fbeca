{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport instance from '../ethereum/projectGenerator.js';\nimport { Box } from '@material-ui/core';\nimport web3 from '../ethereum/web3.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Fab from '@material-ui/core/Fab';\nimport { useRouter } from 'next/router';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport PostAddTwoToneIcon from '@material-ui/icons/PostAddTwoTone';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\nexport default function MinDonation() {\n  const router = useRouter();\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const timer = React.useRef();\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  const [values, setValues] = React.useState({\n    amount: '',\n    name: '',\n    desc: ''\n  });\n\n  const handleChange = prop => event => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [prop]: event.target.value\n    }));\n  };\n\n  const onSubmit = async () => {\n    setOpen(true);\n    setSuccess(false);\n    setLoading(true);\n    console.log(values.amount); //const accounts;\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await instance.methods.createProject(values.amount, values.name, values.desc).send({\n        from: accounts[0]\n      });\n      console.log(accounts[0]);\n      setSuccess(true);\n      setLoading(false);\n      setOpen(false);\n      router.push('/');\n    } catch (err) {\n      setSuccess(false);\n      setLoading(false);\n      setOpen(false);\n      console.log(\"Error: \" + err.message);\n    } // await instance.methods.createProject(values.amount) .send({\n    //   from: accounts[0]\n    // })\n\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxs(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsx(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsx(PostAddTwoToneIcon, {})\n        }), /*#__PURE__*/_jsx(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Create A New Project To Be Funded\"\n        }), /*#__PURE__*/_jsxs(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsx(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"name\",\n            label: \"Enter Project Name\",\n            name: \"name\",\n            autoFocus: true,\n            value: values.name,\n            onChange: handleChange('name')\n          }), /*#__PURE__*/_jsx(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"desc\",\n            label: \"Enter Project Description\",\n            id: \"desc\",\n            value: values.desc,\n            onChange: handleChange('desc')\n          }), /*#__PURE__*/_jsx(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"amount\",\n            label: \"Enter Minimum Donation Amount In wei\",\n            id: \"amount\",\n            value: values.amount,\n            onChange: handleChange('amount')\n          }), /*#__PURE__*/_jsx(Button, {\n            onClick: onSubmit,\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Create\"\n          }), /*#__PURE__*/_jsxs(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: true\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(Box, {\n        mt: 8\n      })]\n    }), /*#__PURE__*/_jsx(Box, {\n      textAlign: \"center\",\n      m: 4,\n      children: /*#__PURE__*/_jsx(Backdrop, {\n        className: classes.backdrop,\n        open: open,\n        children: /*#__PURE__*/_jsx(CircularProgress, {\n          color: \"inherit\"\n        })\n      })\n    })]\n  });\n}\n;","map":null,"metadata":{},"sourceType":"module"}